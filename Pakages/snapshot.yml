---
 - hosts: localhost
   tasks:
# tasks file for aws.facts
   - name: Gather EC2 facts.
     ec2_instance_facts:
       aws_secret_key: "{{ aws_secret_key }}"
       aws_access_key: "{{ aws_access_key }}"
       region: "{{ region }}"
       filters:
         "tag:backup": "yes"
     register: ec2_facts
   - name: Print the name of the instances
     debug:
       msg: "Instance Tag name is: '{{ item.tags.Name }}'"
     with_items: "{{ ec2_facts.instances }}"
    
   - name: Find snapshots.
     ec2_snapshot_facts:
       aws_secret_key: "{{ aws_secret_key }}"
       aws_access_key: "{{ aws_access_key }}"
       region: "{{ region }}"
       filters:
         "tag:identifier": "awsbackup"
         "tag:incremental": "{{ INCREMENTAL }}"
     register: ec2_snapshot_facts

   - name: Print snapshot facts
     debug:
       msg: "{{ ec2_snapshot_facts }}" 


   - name: Get ordered list of snapshots for each instance.
     set_fact:
       snaps_fact_list:  "{{ ec2_snapshot_facts.snapshots|selectattr('tags.identifier', 'equalto', 'awsbackup')|selectattr('tags.incremental', 'equalto', INCREMENTAL)|selectattr('tags.instance', 'equalto', item.tags.Name)|sort(attribute='start_time')|reverse|map(attribute='snapshot_id')|list }}"
     with_items: "{{ ec2_facts.instances }}"
     register: snaps_fact_list_register 

   - name: Cut the list by our COUNT variable.
     set_fact:
       snaps_cut: "{{ item.ansible_facts['snaps_fact_list'][3:] }}"
     with_items: "{{ snaps_fact_list_register.results }}"
     register: snaps_cut_register

   - name: Print the cut snapshot facts
     debug:
       msg: "{{ snaps_cut_register }}"

   - name: Print the cut snapshot facts
     debug:
       msg: "{{ item.ansible_facts.snaps_cut }}"
     with_items: "{{ snaps_cut_register.results }}"

     with_items: "{{ snaps_cut_register.results }}"
     register: deleted_snapshots